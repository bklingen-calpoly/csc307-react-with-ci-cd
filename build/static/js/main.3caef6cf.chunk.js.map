{"version":3,"sources":["Table.js","Form.js","MyApp.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","useState","person","setPerson","handleChange","event","target","value","htmlFor","type","id","onChange","handleSubmit","MyApp","characters","setCharacters","API_BASE_URL","a","axios","get","response","data","users_list","console","log","post","useEffect","fetchAll","then","result","className","updated","filter","character","i","makePostCall","status","ReactDOM","render","document","getElementById"],"mappings":"iPAEA,SAASA,IACP,OACE,gCACE,+BACE,sCACA,qCACA,6CAMR,SAASC,EAAWC,GAClB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,IAeFS,MAZf,SAAgBV,GACd,OACE,kCACE,cAACF,EAAD,IACA,cAACC,EAAD,CACEG,cAAeF,EAAME,cACrBO,gBAAiBT,EAAMS,sBCOhBE,MAxCf,SAAeX,GACb,MAA4BY,mBAAS,CACnCN,KAAM,GACNC,IAAK,KAFP,mBAAOM,EAAP,KAAeC,EAAf,KAKA,SAASC,EAAcC,GACrB,MAAwBA,EAAMC,OAAtBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACMJ,EAAP,QAATR,EAA0B,CAAEA,KAAMO,EAAOP,KAAMC,IAAKW,GACzC,CAAEZ,KAAMY,EAAOX,IAAKM,EAAON,MAQ5C,OACE,iCACE,uBAAOY,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLd,KAAK,OACLe,GAAG,OACHH,MAAOL,EAAOP,KACdgB,SAAUP,IAEZ,uBAAOI,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLd,KAAK,MACLe,GAAG,MACHH,MAAOL,EAAON,IACde,SAAUP,IAEZ,uBAAOK,KAAK,SAASF,MAAM,SAASV,QAvBxC,WACER,EAAMuB,aAAaV,GACnBC,EAAU,CAAER,KAAM,GAAIC,IAAK,YC+ChBiB,MA1Df,WACE,MAAoCZ,mBAAS,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KAGMC,EAAe,4CAJN,4CAcf,4BAAAC,EAAA,+EAE2BC,IAAMC,IAAIH,EAAe,UAFpD,cAEUI,EAFV,yBAGWA,EAASC,KAAKC,YAHzB,uCAMIC,QAAQC,IAAR,MANJ,mBAOW,GAPX,0DAde,kEAyBf,WAA4BtB,GAA5B,eAAAe,EAAA,+EAE2BC,IAAMO,KAAKT,EAAe,SAAUd,GAF/D,cAEUkB,EAFV,yBAGWA,GAHX,uCAKIG,QAAQC,IAAR,MALJ,mBAMW,GANX,0DAzBe,sBAkDf,OA5CAE,qBAAU,YANK,2CAObC,GAAWC,MAAK,SAACC,GACXA,GACFd,EAAcc,QAGjB,IAuCD,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,CAAOvC,cAAeuB,EAAYhB,gBAjBtC,SAA4BJ,GAC1B,IAAMqC,EAAUjB,EAAWkB,QAAO,SAACC,EAAWC,GAC5C,OAAOA,IAAMxC,KAEfqB,EAAcgB,MAcZ,cAAC,EAAD,CAAMnB,aAXV,SAAoBV,IA1CL,4CA2CbiC,CAAajC,GAAQ0B,MAAK,SAACC,GACrBA,GAA4B,MAAlBA,EAAOO,QACnBrB,EAAc,GAAD,mBAAKD,GAAL,CAAiBZ,e,MC7CtCmC,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,W","file":"static/js/main.3caef6cf.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TableHeader () {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n}\n\nfunction TableBody (props) {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nfunction Table (props) {\n  return (\n    <table>\n      <TableHeader />\n      <TableBody\n        characterData={props.characterData}\n        removeCharacter={props.removeCharacter}\n      />\n    </table>\n  )\n}\n\nexport default Table\n","import React, { useState } from 'react'\n\nfunction Form (props) {\n  const [person, setPerson] = useState({\n    name: '',\n    job: ''\n  })\n\n  function handleChange (event) {\n    const { name, value } = event.target\n    if (name === 'job') setPerson({ name: person.name, job: value })\n    else setPerson({ name: value, job: person.job })\n  }\n\n  function submitForm () {\n    props.handleSubmit(person)\n    setPerson({ name: '', job: '' })\n  }\n\n  return (\n    <form>\n      <label htmlFor='name'>Name</label>\n      <input\n        type='text'\n        name='name'\n        id='name'\n        value={person.name}\n        onChange={handleChange}\n      />\n      <label htmlFor='job'>Job</label>\n      <input\n        type='text'\n        name='job'\n        id='job'\n        value={person.job}\n        onChange={handleChange}\n      />\n      <input type='button' value='Submit' onClick={submitForm} />\n    </form>\n  )\n}\n\nexport default Form\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nfunction MyApp() {\n  const [characters, setCharacters] = useState([]);\n\n  // const API_BASE_URL = 'http://localhost:5000';\n  const API_BASE_URL = \"https://csc307-api-bklingen.herokuapp.com\";\n\n  useEffect(() => {\n    fetchAll().then((result) => {\n      if (result) {\n        setCharacters(result);\n      }\n    });\n  }, []);\n\n  async function fetchAll() {\n    try {\n      const response = await axios.get(API_BASE_URL + \"/users\");\n      return response.data.users_list;\n    } catch (error) {\n      // We're not handling errors. Just logging into the console.\n      console.log(error);\n      return false;\n    }\n  }\n\n  async function makePostCall(person) {\n    try {\n      const response = await axios.post(API_BASE_URL + \"/users\", person);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  function removeOneCharacter(index) {\n    const updated = characters.filter((character, i) => {\n      return i !== index;\n    });\n    setCharacters(updated);\n  }\n\n  function updateList(person) {\n    makePostCall(person).then((result) => {\n      if (result && result.status === 200) {\n        setCharacters([...characters, person]);\n      }\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <Table characterData={characters} removeCharacter={removeOneCharacter} />\n      <Form handleSubmit={updateList} />\n    </div>\n  );\n}\n\nexport default MyApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport MyApp from './MyApp'\nimport './index.css'\n\nReactDOM.render(<MyApp />, document.getElementById('root'))\n"],"sourceRoot":""}